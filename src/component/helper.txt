        <script type="text/babel" data-type="module" data-presets="react">
            import React, { useRef, useEffect } from 'react'
            import { createRoot } from 'react-dom/client'
            import { Canvas, useFrame } from '@react-three/fiber'

            function Box(props) {
                const ref = useRef()

                useFrame((_, delta) => {
                    ref.current.rotation.x += 1 * delta
                    ref.current.rotation.y += 0.5 * delta
                })

                return (
                    <mesh {...props} ref={ref}>
                        <boxGeometry />
                        <meshBasicMaterial color={0x00ff00} wireframe />
                    </mesh>
                )
            }

            function App() {
                return (
                    <Canvas camera={{ position: [0, 0, 2] }}>
                        <Box position={[-0.75, 0, 0]} name="A" />
                        <Box position={[0.75, 0, 0]} name="B" />
                    </Canvas>
                )
            }

            createRoot(document.getElementById('root')).render(<App />)
        </script>

// ParentComponent.js
import React from 'react';
import ChildComponent from './ChildComponent';
import { useGLTF } from '@react-three/drei';

const ParentComponent = () => {
  const { nodes } = useGLTF('/path/to/model.glb');

  return (
    <div>
      <ChildComponent nodes={nodes} />
    </div>
  );
};

export default ParentComponent;

// ChildComponent.js
import React from 'react';

const ChildComponent = ({ nodes }) => {
  // Access the nodes object here
  console.log(nodes);

  return (
    <div>
      {/* Child component content */}
    </div>
  );
};

export default ChildComponent;